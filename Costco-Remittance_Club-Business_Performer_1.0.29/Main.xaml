<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_OrchestratorQueueName="Test" this:Main.in_StorageBucketName="Costco Remittance" this:Main.in_RootDirectory="\" this:Main.in_ProcessName="Performer" this:Main.in_RootFolderPath="C:\RemittanceFile\ProcessFolder" this:Main.in_OrchestratorFolderPath="Development/Accounting/Costco Remittance" this:Main.in_ConfigFolderName="ConfigFile" this:Main.in_Environment="Dev" this:Main.in_AssetCredentialName="CostcoPortal_Credentials" this:Main.in_TechnicalConfigPath="PerformerConfig.xlsx" this:Main.in_BusinessConfigPath="BusinessConfig.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Data;assembly=Studio.Generated.TypedDataRow34" xmlns:sd2="clr-namespace:System.Data;assembly=Studio.Generated.TypedDataRow29" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umas="clr-namespace:UiPath.MicrosoftOffice365.Activities.Sharepoint;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umase="clr-namespace:UiPath.MicrosoftOffice365.Activities.Sharepoint.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umasm="clr-namespace:UiPath.MicrosoftOffice365.Activities.Sharepoint.Models;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umsm="clr-namespace:UiPath.MicrosoftOffice365.Sharepoint.Models;assembly=UiPath.MicrosoftOffice365" xmlns:umsmc="clr-namespace:UiPath.MicrosoftOffice365.Sharepoint.Models.Columns;assembly=UiPath.MicrosoftOffice365" xmlns:upau="clr-namespace:UiPath.Persistence.Activities.UserAction;assembly=UiPath.Persistence.Activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator queue name to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_StorageBucketName" Type="InArgument(x:String)" />
    <x:Property Name="in_RootDirectory" Type="InArgument(x:String)" />
    <x:Property Name="in_ProcessName" Type="InArgument(x:String)" />
    <x:Property Name="in_RootFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_OrchestratorFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_ConfigFolderName" Type="InArgument(x:String)" />
    <x:Property Name="in_Environment" Type="InArgument(x:String)" />
    <x:Property Name="in_AssetCredentialName" Type="InArgument(x:String)" />
    <x:Property Name="in_TechnicalConfigPath" Type="InArgument(x:String)" />
    <x:Property Name="in_BusinessConfigPath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>693.3333333333334,869.3333333333334</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Persistence.Activities.UserAction</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>UiPath.Persistence.Activities.BaseTask</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Sharepoint</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Sharepoint.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Sharepoint.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Sharepoint.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Sharepoint.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="176">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow3</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable4</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable5</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable5</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable5</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow6</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable7</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow8</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow9</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow10</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow11</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow1</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow2</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow12</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow13</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow17</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow17</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow18</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow14</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow15</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow16</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow19</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow19</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow20</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable21</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow22</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow23</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow24</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow25</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow26</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow26</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow27</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow26</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow28</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Costco-Remittance_Club-Business_Performer.Core</AssemblyReference>
      <AssemblyReference>Costco-Remittance_Club-Business_Performer.Core</AssemblyReference>
      <AssemblyReference>Costco-Remittance_Club-Business_Performer.Core</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow29</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow30</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow31</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow32</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow33</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow34</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow29</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID27}" sap2010:Annotation.AnnotationText="[Process title]&#xA;[Process description]&#xA;[Additional information (e.g., author, contact information and applications involved and required external setup)]" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="1468.8000000000002,342.504" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">45,125</av:Point>
        <x:Double x:Key="StateContainerWidth">1105.6</x:Double>
        <x:Double x:Key="StateContainerHeight">1406.6</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">94.6,149.8 124.6,149.8 124.6,145.2 164,145.2</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID26" sap2010:Annotation.AnnotationText="Get the next transaction to be processed." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="240,109.6" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Retrieve a new transaction data to be processed.&#xA;The TransactionNumber variable holds the current transaction number and incrementing this variable makes the framework retrieve the next transaction. If the framework is retrying a failed transaction, this variable is not incremented until the maximum number of retry attempts is reached." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="641.6,2854.4" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
            <Variable x:TypeArguments="sd:DataRow" Name="RemittanceListReference" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="608,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_101" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Get Transaction Data"]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign DisplayName="Assign - SystemException" sap:VirtualizedContainerService.HintSize="608,113.6" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Assign - CurrentStateError" sap:VirtualizedContainerService.HintSize="608,113.6" sap2010:WorkflowViewState.IdRef="Assign_37">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[CurrentStateError]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Get Transaction Data</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="608,122.4" sap2010:WorkflowViewState.IdRef="ShouldStop_2" Result="[ShouldStop]" />
          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="608,2192.8" sap2010:WorkflowViewState.IdRef="If_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="467.2,340.8" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_100" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Stop process requested."]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <Assign DisplayName="End Process (Stop process requested)" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="574.4,1668" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence sap:VirtualizedContainerService.HintSize="537.6,1196.8" sap2010:WorkflowViewState.IdRef="Sequence_86">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="504,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\GetTransactionData.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TransactionData">[dt_TransactionData]</InOutArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_AuditLogFilePath">[AuditLogFilePath]</InArgument>
                        <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_RemittanceListReference">[RemittanceListReference]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - SharepointRemittanceID" sap:VirtualizedContainerService.HintSize="504,113.6" sap2010:WorkflowViewState.IdRef="Assign_56">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SharepointRemittanceListID]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[TransactionItem.SpecificContent("Remittance Item ID").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="504,428" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_92">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="RemittanceFileName" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_48">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RemittanceFileName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[If(RemittanceListReference IsNot Nothing, Uri.UnescapeDataString(System.IO.Path.GetFileName(RemittanceListReference("Attachment").ToString().Replace("\", "/"))), String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="470.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Assign DisplayName="RemittanceFileName" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_50">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[RemittanceFileName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="504,419.2" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_91">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="RemittanceCountryName" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_49">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[RemittanceCountryName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[If(RemittanceListReference IsNot Nothing, CStr(RemittanceListReference("Country")), String.Empty)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="470.4,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Assign DisplayName="RemittanceCountryName" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_51">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[RemittanceCountryName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="540.8,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Log exception message and end process" sap:VirtualizedContainerService.HintSize="467.2,452.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message  (Get transaction data error)" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                        <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="End Process (Could not get new transaction)" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">530,235</av:Point>
          <av:Size x:Key="ShapeSize">240,109.6</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">228.0000000000001</x:Double>
          <x:Double x:Key="StateContainerHeight">34.44000000000014</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="New Transaction" sap:VirtualizedContainerService.HintSize="448.8,522.4" sap2010:WorkflowViewState.IdRef="Transition_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">650,344.6 650,374.59999999999997 600,374.59999999999997 600,385</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID25" sap2010:Annotation.AnnotationText="This stage performs the complete processing for a single transaction (remittance item).&#xA;It includes the following key steps:&#xA;&#xA;1.Navigation and Data Extraction&#xA;       1.Navigates to the Vendor Accounting Portal&#xA;        2.Finds the remittance entry and downloads the associated CSV&#xA;        3.Validates remittance amount and date from the PDF against the portal entry&#xA;        4.Downloads PDFs for any unidentified chargeback type line items&#xA;&#xA;2.Data Processing and Business Rules&#xA;        1.Applies business rules to the remittance CSV data&#xA;        2.Reads business config (lookup &amp; chargeback type rules)&#xA;        3.Performs dynamic Excel-based lookups across multiple sheets&#xA;        4.Retrieves the correct Costco Canada sheet for the month&#xA;        5.Determines and updates chargeback types using rules and lookup data&#xA;&#xA;3.File Handling and Uploads&#xA;        1.Uploads unidentified chargeback PDFs to the 'Line Items Files' folder in SharePoint&#xA;        2.Uploads the processed master CSV file to 'Master Remittance' folder&#xA;&#xA;4.Action Center and Post-Validation&#xA;       1.Creates Action Center tasks for manual review of line items&#xA;       2.Processes Action Center responses and updates the master CSV&#xA;       3.Updates SharePoint lists (‘Remittance List’ and ‘Line Items List’) to status ‘Completed" DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="240,861.6" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Try to process transaction" sap:VirtualizedContainerService.HintSize="571.2,4204.8" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="534.4,3950.4" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="upau:UserActionData" Name="CreateAppTask" />
                        <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Queue(x:Int32))" Name="EmptyRowIndexMap" />
                        <Variable x:TypeArguments="x:Int32" Name="LastRowNumberCostco" />
                        <Variable x:TypeArguments="x:String" Name="UploadedAllCostcoWorkbookUrl" />
                        <Variable x:TypeArguments="sd:DataTable" Name="BusinessRuleApplied" />
                        <Variable x:TypeArguments="x:String" Name="ActionCenterOutputPath" />
                        <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Queue(x:Object))" Name="SharepointReferenceId" />
                        <Variable x:TypeArguments="scg:List(upau:UserActionData)" Name="ListOfCreateAppTask" />
                        <Variable x:TypeArguments="scg:List(upau:UserActionData)" Name="FinalUserActionData" />
                        <Variable x:TypeArguments="x:String" Name="ActionCenterTaskIds" />
                        <Variable x:TypeArguments="upr:ILocalResource" Name="ActionCenterBatchesFolderPath" />
                        <Variable x:TypeArguments="sd:DataTable" Name="dt_ActionCenterOutputData" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_102" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Process Transaction"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Assign - CurrentStateError" sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[CurrentStateError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Process Transaction</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign BusinessException" sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - ActionCenterOutputPath" sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_33">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[ActionCenterOutputPath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_RootFolderPath+"\"+in_ProcessName+"\"+CurrentDate+"\"+Config("OutputFolder").ToString+"\"+Config("ActionCenterOutputFileName").ToString+"_"+Now.ToString(config("OutputDateTimeFormat").ToString)+".txt"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Started processing transactions in 'Process Transaction' state."]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Process workflow" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_BusinessConfig">[BusinessGeneralConfig]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[in_ProcessName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="RootDirectory">[in_RootDirectory]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CurrentDate">[CurrentDate]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="RootFolderPath">[in_RootFolderPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_BusinessConfigFilePath">[BusinessConfigFilePath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TechnicalConfigFilePath">[TechnicalConfigFilePath]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_BusinessDropdownConfig">[BusinessGeneralConfig]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorFolderPath">[in_OrchestratorFolderPath]</InArgument>
                          <OutArgument x:TypeArguments="upau:UserActionData" x:Key="out_CreateAppTask">[CreateAppTask]</OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Queue(x:Int32))" x:Key="out_EmptyRowIndexMap">[EmptyRowIndexMap]</OutArgument>
                          <OutArgument x:TypeArguments="x:Int32" x:Key="out_LastRowNumberCostco">[LastRowNumberCostco]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_UploadedAllCostcoWorkbookUrl">[UploadedAllCostcoWorkbookUrl]</OutArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_BusinessRuleApplied">[BusinessRuleApplied]</OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Queue(x:Object))" x:Key="out_SharepointReferenceId">[SharepointReferenceId]</OutArgument>
                          <InOutArgument x:TypeArguments="x:String" x:Key="out_AllCostcoFilePath">[AllCostcoFilePath]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_GstReceivablePaymentFilePath">[GstReceivablePaymentPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_OrderReportFilePath">[OrderReportFilePath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_AuditLogsFilePath">[AuditLogFilePath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_InputFolderPath">[InputFolderPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[OutputFolderPath]</InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_HasLoggedin">[HasLoggedInSuccessful]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_RemittanceFileName">[RemittanceFileName]</InArgument>
                          <OutArgument x:TypeArguments="scg:List(upau:UserActionData)" x:Key="out_ListOfCreateAppTask">[ListOfCreateAppTask]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">[String.Format("Completed '{0}' state: Lookup completed, task created, and transaction processed successfully.", CurrentStateError)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Assign - FinalUserActionData" sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_52">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:List(upau:UserActionData)">[FinalUserActionData]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:List(upau:UserActionData)">[New List(Of UserActionData)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="500.8,112.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Output="[ActionCenterBatchesFolderPath]" Path="[in_RootFolderPath+&quot;\&quot;+in_ProcessName+&quot;\&quot;+CurrentDate+&quot;\&quot;+Config(&quot;OutputFolder&quot;).ToString+&quot;\&quot;+&quot;ActionCenterBatchesData&quot;]" />
                      <Assign DisplayName="Assign - ActionCenterTaskIds" sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_53">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[ActionCenterTaskIds]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Join(", ", ListOfCreateAppTask.Select(Function(item) item.Id))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Assign - BatchProcessingStatus" sap:VirtualizedContainerService.HintSize="500.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_54">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[BatchProcessingStatus]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[if(ListOfCreateAppTask.Count &gt; 1, "Yes", "No")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendHtmlBasedEmail - Invoke Workflow File (Framework\Utilities\SendHtmlBasedEmail.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_134" UnSafe="False" WorkflowFileName="Framework\Utilities\SendHtmlBasedEmail.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_HtmlEmailTitle">[Config("ActionCenterHtmlBodyTitle").ToString.Trim]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CommaSeparetedEmails">[Config("TechnicalUsersEmailIDs").ToString + "," + BusinessGeneralConfig("BusinessUsersEmailIDs").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("ActionCenterTaskEmailSubject").ToString.Trim().Replace("[Date]", Now.tostring("dd-MM-yyyy")).Replace("[Time]", Now.ToString("hh:mm:ss")).Replace("[TaskID]", "Action Center Tasks")]</InArgument>
                          <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" x:Key="in_Attachment" />
                          <InArgument x:TypeArguments="x:String" x:Key="in_Footer">[Config("EmailFooter").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Config("ActionCenterStatusBody").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName" />
                          <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage" />
                          <InArgument x:TypeArguments="x:String" x:Key="in_RemittaceFileName">[RemittanceFileName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[RemittanceCountryName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds">[ActionCenterTaskIds]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing">[BatchProcessingStatus]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_104" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">[string.Format("Mail has sent successfully for user validation on Action Center task [TaskId: {0}].",ActionCenterTaskIds)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:ForEach x:TypeArguments="upau:UserActionData" CurrentIndex="{x:Null}" DisplayName="For Each currentUserActionData" sap:VirtualizedContainerService.HintSize="500.8,937.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[ListOfCreateAppTask]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="upau:UserActionData">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="upau:UserActionData" Name="currentUserActionData" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,791.2" sap2010:WorkflowViewState.IdRef="Sequence_89">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="upau:UserActionData" Name="TaskOut" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_108" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">[string.Format("Waiting for user validation on Action Center task [TaskId: {0}].",currentUserActionData.Id)]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="433.6,56.8" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="[CInt(Config(&quot;MaxRetryCount&quot;).ToString.Trim)]" RetryInterval="[TimeSpan.FromSeconds(CInt(Config(&quot;RetryInterval&quot;).ToString.Trim))]">
                                <ui:RetryScope.ActivityBody>
                                  <ActivityAction>
                                    <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="416,173.6" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <upau:WaitForUserActionAndResume StatusMessage="{x:Null}" TaskAction="{x:Null}" TimeoutMs="{x:Null}" WaitItemDataObject="{x:Null}" DisplayName="Wait For App Task and Resume" sap:VirtualizedContainerService.HintSize="382.4,113.6" sap2010:WorkflowViewState.IdRef="WaitForUserActionAndResume_2" TaskInput="[currentUserActionData]" TaskOutput="[TaskOut]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:RetryScope.ActivityBody>
                                <ui:RetryScope.Condition>
                                  <ActivityFunc x:TypeArguments="x:Boolean" />
                                </ui:RetryScope.Condition>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:RetryScope>
                              <InvokeMethod sap2010:Annotation.AnnotationText="Adds the validated TaskOut user action data to the FinalUserActionData list." DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="433.6,227.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Add">
                                <InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:List(upau:UserActionData)">[FinalUserActionData]</InArgument>
                                </InvokeMethod.TargetObject>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <InArgument x:TypeArguments="upau:UserActionData">[TaskOut]</InArgument>
                              </InvokeMethod>
                              <Assign DisplayName="Assign -Action Center folder Path" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_55">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ActionCenterOutputPath]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ActionCenterBatchesFolderPath.LocalPath + "\"+Config("ActionCenterOutputFileName").ToString+"_"+Now.ToString(config("OutputDateTimeFormat").ToString)+".txt"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="[ActionCenterOutputPath]" sap:VirtualizedContainerService.HintSize="433.6,157.6" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[Newtonsoft.Json.JsonConvert.SerializeObject(TaskOut)]" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">[String.Format("Action Center output successfully stored at: {0}", ActionCenterOutputPath)]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MergeActionCenterValidatedData - Invoke Workflow File (Framework\Utilities\MergeActionCenterValidatedData.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_106" UnSafe="False" WorkflowFileName="Framework\Utilities\MergeActionCenterValidatedData.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:List(upau:UserActionData)" x:Key="in_FinalUserActionData">[FinalUserActionData]</InArgument>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_FinalActionCenterValidationData">[dt_ActionCenterOutputData]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_107" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Merging of all batches is completed"]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PostActionCenterValidationTasks - Invoke Workflow File (Framework\ActionCenter\UpdateMasterFile.xaml)" sap:VirtualizedContainerService.HintSize="500.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Framework\BusinessRules\PostActionCenterValidationTasks.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Queue(x:Int32))" x:Key="in_EmptyRowIndexMap">[EmptyRowIndexMap]</InArgument>
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_AllCostcoLastRowNumber">[LastRowNumberCostco]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_AllCostcoWorkbookPath">[AllCostcoFilePath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_AllCostcoSheetName">[Config("AllCostcoRemittanceSheetName").ToString]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TaskOutputFilePath">[ActionCenterOutputPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_UploadedAllCostcoWorkbookUrl">[UploadedAllCostcoWorkbookUrl]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_BusinessRuleApplied">[BusinessRuleApplied]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Queue(x:Object))" x:Key="in_SharepointReferenceId">[SharepointReferenceId]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ID">[TransactionItem.SpecificContent("Remittance Item ID").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_AuditLogFilePath">[AuditLogFilePath]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_ActionCenterOutputData">[dt_ActionCenterOutputData]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <TryCatch DisplayName="Try Catch Set Transaction Status (Success)" sap:VirtualizedContainerService.HintSize="500.8,398.4" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                        <TryCatch.Try>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (Success)" sap:VirtualizedContainerService.HintSize="334.4,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\SetTransactionStatus.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[Nothing]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                              <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[Nothing]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[OutputFolderPath]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Log message (Failed to set transaction status Success)" sap:VirtualizedContainerService.HintSize="335.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="537.6,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Handle Business Exception" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to BusinessRuleException" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <TryCatch DisplayName="Try Catch Set Transaction Status (BRE)" sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (BRE)" sap:VirtualizedContainerService.HintSize="334.4,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\SetTransactionStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[BusinessException]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[Nothing]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[OutputFolderPath]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log message (Failed to set transaction status BRE)" sap:VirtualizedContainerService.HintSize="335.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="537.6,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Handle System Exception" sap:VirtualizedContainerService.HintSize="416,164.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to SystemException" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <TryCatch DisplayName="Try Catch SetTransactionStatus (SE)" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (SE)" sap:VirtualizedContainerService.HintSize="334.4,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\SetTransactionStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[Nothing]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[OutputFolderPath]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,213.6" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log message (Failed to set transaction status SE)" sap:VirtualizedContainerService.HintSize="335.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">480,385</av:Point>
                  <av:Size x:Key="ShapeSize">240,861.6</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">227.92953933936704</x:Double>
                  <x:Double x:Key="StateContainerHeight">34.79781563235815</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition sap2010:Annotation.AnnotationText="There is no need for any action in case of successful transaction.&#xA;The process should simply go to next transaction." DisplayName="Success" sap:VirtualizedContainerService.HintSize="490.4,534.4" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">720,729.6400000000001 780,729.6400000000001 780,126 750,126</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">56</x:Int32>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[SystemException Is Nothing And BusinessException is Nothing]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID24" sap2010:Annotation.AnnotationText="Send success or exception email based on the transaction outcome, then log out from the Costco application.&#xA;" DisplayName="End Process" sap:VirtualizedContainerService.HintSize="200,168" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                      <State.Entry>
                        <Sequence sap:VirtualizedContainerService.HintSize="867.2,7852.8" sap2010:WorkflowViewState.IdRef="Sequence_57">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try to close all aplications" sap:VirtualizedContainerService.HintSize="833.6,7792.8" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence sap:VirtualizedContainerService.HintSize="796.8,7515.2" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="LogFilePath" />
                                  <Variable x:TypeArguments="scg:IList(upr:IResource)" Name="ListOfAttachment" />
                                  <Variable x:TypeArguments="x:Boolean" Name="IsLogFolderExist" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign - LogFilePath" sap:VirtualizedContainerService.HintSize="763.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_42">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[LogFilePath]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[in_RootFolderPath+"\"+in_ProcessName+"\"+CurrentDate+"\"+"Logs"]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <If Condition="[HasLoggedInSuccessful]" DisplayName="If - Log out if logged in" sap:VirtualizedContainerService.HintSize="763.2,56.8" sap2010:WorkflowViewState.IdRef="If_26">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="470.4,458.4" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,398.4" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                        <TryCatch.Try>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogoutFromCostcoPortal - Invoke Workflow File (Framework\CostcoUi\LogoutFromCostcoPortal.xaml)" sap:VirtualizedContainerService.HintSize="334.4,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_88" UnSafe="False" WorkflowFileName="Framework\CostcoUi\LogoutFromCostcoPortal.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[OutputFolderPath]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="Warn" Message="[&quot;Costco Logout failed&quot;]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:FolderExistsX DisplayName="Folder Exists" Exists="[IsLogFolderExist]" sap:VirtualizedContainerService.HintSize="763.2,166.4" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[LogFilePath]" />
                                <ui:CreateList x:TypeArguments="upr:IResource" DisplayName="Create List" sap:VirtualizedContainerService.HintSize="763.2,167.2" sap2010:WorkflowViewState.IdRef="CreateList`1_2" NewList="[ListOfAttachment]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CreateList>
                                <If Condition="[IsLogFolderExist And (SystemException isNot Nothing Or BusinessException IsNot Nothing)]" DisplayName="If - Checking for conditions to attached attachment" sap:VirtualizedContainerService.HintSize="763.2,996.8" sap2010:WorkflowViewState.IdRef="If_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="483.2,736.8" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="s:String[]" Name="ExceptionScreenshotList" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[LogFilePath]" sap:VirtualizedContainerService.HintSize="449.6,515.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                                        <ui:ForEachFileX.Body>
                                          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                                            <ActivityAction.Argument1>
                                              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                                            </ActivityAction.Argument1>
                                            <ActivityAction.Argument2>
                                              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                            </ActivityAction.Argument2>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,218.4" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <uasa:AppendItemToList x:TypeArguments="upr:IResource" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="382.4,158.4" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_2" ItemToAppend="[LocalResource.FromPath(CurrentFile.FullName)]" List="[ListOfAttachment]" />
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:ForEachFileX.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ForEachFileX>
                                      <Assign sap:VirtualizedContainerService.HintSize="449.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_47">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:String[]">[ExceptionScreenshotList]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(OutputFolderPath + "\" +Config("ExScreenshotsFolderPath").ToString)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <If Condition="[ExceptionScreenshotList.Length &lt;&gt; 0]" sap:VirtualizedContainerService.HintSize="449.6,48" sap2010:WorkflowViewState.IdRef="If_30">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="483.2,566.4" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[OutputFolderPath + &quot;\&quot; +Config(&quot;ExScreenshotsFolderPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="449.6,506.4" sap2010:WorkflowViewState.IdRef="ForEachFileX_3" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                                              <ui:ForEachFileX.Body>
                                                <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                                                  <ActivityAction.Argument1>
                                                    <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                                                  </ActivityAction.Argument1>
                                                  <ActivityAction.Argument2>
                                                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                                  </ActivityAction.Argument2>
                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,218.4" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <uasa:AppendItemToList x:TypeArguments="upr:IResource" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="382.4,158.4" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_4" ItemToAppend="[LocalResource.FromPath(CurrentFile.FullName)]" List="[ListOfAttachment]" />
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEachFileX.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:ForEachFileX>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <If Condition="[BusinessException IsNot Nothing Or SystemException IsNot Nothing]" DisplayName="If - Check any business or system exception occured" sap:VirtualizedContainerService.HintSize="763.2,5954.4" sap2010:WorkflowViewState.IdRef="If_38">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="729.6,5215.2" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[Config Is Nothing Or BusinessGeneralConfig Is Nothing]" sap:VirtualizedContainerService.HintSize="696,5155.2" sap2010:WorkflowViewState.IdRef="If_32">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Then - Config Exception to developer" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[AuditLogFilePath is Nothing Or ErrorLogFilePath is Nothing]" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="If_33">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,458.4" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="LogMessage_66" Level="Error" Message="[String.Format(&quot;[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]&quot;, CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendHtmlBasedEmail - Invoke Workflow File (Framework\Utilities\SendHtmlBasedEmail.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_110" UnSafe="False" WorkflowFileName="Framework\Utilities\SendHtmlBasedEmail.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_HtmlEmailTitle">["Performer Process".Trim + String.Format(" ({0})", in_Environment)]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[new Dictionary(of String, Object)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CommaSeparetedEmails">shubham.ghode@xalta.tech,lohith@xalta.tech</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject" xml:space="preserve">[string.Format("Exception | Costco Remittance Process | Performer Process  | {1}", in_ProcessName, Now.ToString("yyyy-MM-dd hh:mm:ss"))]</InArgument>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" x:Key="in_Attachment">[Nothing]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Footer">UiPath Bot</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">❌ Bot execution failed</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName">[CurrentStateError]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">[SystemException.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_RemittaceFileName">[RemittanceFileName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[RemittanceCountryName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds" />
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_67" Level="Info" Message="[&quot;Email sent successfully for the current execution&quot;]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,748" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="LogMessage_68" Level="Error" Message="[String.Format(&quot;[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]&quot;, CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_111" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">ERROR</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[String.Format("[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]", CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="382.4,56.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_112" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[ErrorLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">ERROR</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[String.Format("[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]", CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendHtmlBasedEmail - Invoke Workflow File (Framework\Utilities\SendHtmlBasedEmail.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_113" UnSafe="False" WorkflowFileName="Framework\Utilities\SendHtmlBasedEmail.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_HtmlEmailTitle">["Performer Process".Trim + String.Format(" ({0})", in_Environment)]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[new Dictionary(of String, Object)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CommaSeparetedEmails">shubham.ghode@xalta.tech,lohith@xalta.tech</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject" xml:space="preserve">[string.Format("Exception | Costco Remittance Process | Performer Process  | {1}", in_ProcessName, Now.ToString("yyyy-MM-dd hh:mm:ss"))]</InArgument>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" x:Key="in_Attachment">[ListOfAttachment]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Footer">UiPath Bot</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">❌ Bot execution failed</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName">[CurrentStateError]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">[SystemException.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_RemittaceFileName">[RemittanceFileName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[RemittanceCountryName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds" />
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_69" Level="Info" Message="[&quot;Email sent successfully for the current execution&quot;]">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:LogMessage>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_114" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">INFO</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Email sent successfully for the current execution</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="662.4,4885.6" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[BusinessException IsNot Nothing]" DisplayName="If - Business exception mail for business people and developer" sap:VirtualizedContainerService.HintSize="628.8,4825.6" sap2010:WorkflowViewState.IdRef="If_34">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="595.2,2332" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="561.6,1228" sap2010:WorkflowViewState.IdRef="TryCatch_25">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <TryCatch.Try>
                                                      <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope - Updating failed Completed status to remittace list" sap:VirtualizedContainerService.HintSize="524.8,964.8" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="[CInt(Config(&quot;MaxRetryCount&quot;).ToString.Trim)]" RetryInterval="[TimeSpan.FromSeconds(CInt(Config(&quot;RetryInterval&quot;).ToString.Trim))]">
                                                        <ui:RetryScope.ActivityBody>
                                                          <ActivityAction>
                                                            <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="483.2,788.8" sap2010:WorkflowViewState.IdRef="Sequence_113">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If Condition="[Not String.IsNullOrEmpty(SharepointRemittanceListID)]" sap:VirtualizedContainerService.HintSize="449.6,728.8" sap2010:WorkflowViewState.IdRef="If_36">
                                                                <If.Then>
                                                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,340" sap2010:WorkflowViewState.IdRef="Sequence_111">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <umas:UpdateListItemConnections x:TypeArguments="sd1:DataRow34" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" DataRow="{x:Null}" ListNameOrId="{x:Null}" Result="{x:Null}" SiteUrl="{x:Null}" AuthScopesInvalid="False" BrowserListFriendlyName="Remittance Tracking List" BrowserListId="da38d49a-2ba0-46a8-a489-0be0986cfabf" BrowserSiteUrl="fambrandsllc.sharepoint.com,82e2bc74-f50c-46c9-8739-724fdf158658,4e899f91-a492-4584-a92b-6fb0d3048e54" ConnectionId="70561a49-dff9-438c-b574-21d11cd8d904" DisplayName="Update Single List Item" sap:VirtualizedContainerService.HintSize="382.4,280" sap2010:WorkflowViewState.IdRef="UpdateListItemConnections`1_4" ItemId="[SharepointRemittanceListID]" ItemSelectionMode="Browse" UseConnectionService="True">
                                                                      <umas:UpdateListItemConnections.AllColumns>
                                                                        <x:Array Type="umsm:Office365SharepointListColumnSlim">
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID2" DisplayName="ID" Guid="1d22ea11-1e32-424e-89ab-9fedbadb6ce1" Hidden="False" IsRequired="False" Name="ID" ReadOnly="True" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="13" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID3" DisplayName="Title" Guid="fa564e0f-0c70-4ab9-b863-0177e6ddd247" Hidden="False" IsRequired="False" Name="Title" ReadOnly="False" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value=" 09/02/2025" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID4" DisplayName="TransactionDate" Guid="82642ec8-ef9b-478f-acf9-31f7d45fbc31" Hidden="False" IsRequired="False" Name="LinkTitle" ReadOnly="True" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value=" 09/02/2025" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID5" DisplayName="Compliance Asset Id" Guid="3a6b296c-3f50-445c-a13f-9c679ea9dda3" Hidden="False" IsRequired="False" Name="ComplianceAssetId" ReadOnly="True" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="{x:Null}" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID6" DisplayName="Amount" Guid="c485f29b-549d-4e65-a548-157b8e26ef2d" Hidden="False" IsRequired="False" Name="Amount" ReadOnly="False" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="$1,066,768.99" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID7" DisplayName="CompanyName" Guid="7ee12481-e98b-4ae1-a8ec-c298432b133e" Hidden="False" IsRequired="False" Name="CompanyName" ReadOnly="False" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="Costco Wholesale Canada W." />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID8" DisplayName="Country" Guid="631e2cf7-5970-42cb-9f22-ea7cfb40e45d" Hidden="False" IsRequired="False" Name="Country" ReadOnly="False" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="Canada" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID9" DisplayName="Attachment" Guid="61940980-defe-4487-86a4-380b4eb8223e" Hidden="False" IsRequired="False" Name="Attachment" ReadOnly="False" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="https://fambrandsllc.sharepoint.com/sites/COSTCORemittance/Remittance%20Library/Remittance%20File/SinglePointReport09022025.pdf" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID10" DisplayName="Status" Guid="242a6833-5f72-41a4-89c9-dff3a0c1322c" Hidden="False" IsRequired="False" Name="Status" ReadOnly="False" Type="Text">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="{x:Null}" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID11" DisplayName="Content Type" Guid="c042a256-787d-4a6f-8a8a-cf6ab767f12d" Hidden="False" IsRequired="False" Name="ContentType" ReadOnly="False" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="Item" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID12" DisplayName="Modified" Guid="28cf69c5-fa48-462a-b5cd-27b6f9d2bd5f" Hidden="False" IsRequired="False" Name="Modified" ReadOnly="True" Type="DateTime">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="09/03/2025 16:08:13" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID13" DisplayName="Created" Guid="8c06beca-0777-48f7-91c7-6da68bc07b69" Hidden="False" IsRequired="False" Name="Created" ReadOnly="True" Type="DateTime">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="09/03/2025 16:08:10" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" x:Name="__ReferenceID14" DisplayName="Created By" Guid="1df5e554-ec7e-46a6-901d-d85a3881cb18" Hidden="False" IsRequired="False" LookupListId="__PERSON_OR_GROUP__" Name="Author" ReadOnly="True" Type="PersonOrGroup">
                                                                            <umsm:Office365SharepointListColumnSlim.PersonOrGroup>
                                                                              <umsmc:PersonOrGroupColumnMetadata ChooseFromType="peopleAndGroups" MultiSelect="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.PersonOrGroup>
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="Fambrands Bot2" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" x:Name="__ReferenceID15" DisplayName="Modified By" Guid="d31655d1-1d5b-4511-95a1-7a09e9b75bf2" Hidden="False" IsRequired="False" LookupListId="__PERSON_OR_GROUP__" Name="Editor" ReadOnly="True" Type="PersonOrGroup">
                                                                            <umsm:Office365SharepointListColumnSlim.PersonOrGroup>
                                                                              <umsmc:PersonOrGroupColumnMetadata ChooseFromType="peopleAndGroups" MultiSelect="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.PersonOrGroup>
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="Fambrands Bot2" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID16" DisplayName="Attachments" Guid="67df98f4-9dec-48ff-a553-29bece9c5bf4" Hidden="False" IsRequired="False" Name="Attachments" ReadOnly="False" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID17" DisplayName="Edit" Guid="503f1caa-358e-4918-9094-4a2cdc4bc034" Hidden="False" IsRequired="False" Name="Edit" ReadOnly="True" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID18" DisplayName="Title" Guid="bc91a437-52e7-49e1-8c4e-4698904b2b6d" Hidden="False" IsRequired="False" Name="LinkTitleNoMenu" ReadOnly="True" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value=" 09/02/2025" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" LookupColumn="{x:Null}" LookupListId="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID19" DisplayName="Type" Guid="081c6e4c-5c14-4f20-b23e-1a71ceb6a67c" Hidden="False" IsRequired="False" Name="DocIcon" ReadOnly="True" Type="DefaultValue">
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="{x:Null}" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID20" DisplayName="Item Child Count" Guid="b824e17e-a1b3-426e-aecf-f0184d900485" Hidden="False" IsRequired="False" LookupListId="" Name="ItemChildCount" ReadOnly="True" Type="Lookup">
                                                                            <umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                              <umsmc:LookupColumnMetadata ColumnName="ItemChildCount" MultiSelect="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="0" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID21" DisplayName="Folder Child Count" Guid="960ff01f-2b6d-4f1b-9c3f-e19ad8927341" Hidden="False" IsRequired="False" LookupListId="" Name="FolderChildCount" ReadOnly="True" Type="Lookup">
                                                                            <umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                              <umsmc:LookupColumnMetadata ColumnName="FolderChildCount" MultiSelect="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="0" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID22" DisplayName="App Created By" Guid="6bfaba20-36bf-44b5-a1b2-eb6346d49716" Hidden="False" IsRequired="False" LookupListId="AppPrincipals" Name="AppAuthor" ReadOnly="True" Type="Lookup">
                                                                            <umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                              <umsmc:LookupColumnMetadata ColumnName="Title" MultiSelect="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="UiPath for OneDrive and SharePoint" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                          <umsm:Office365SharepointListColumnSlim Choice="{x:Null}" ColumnGroup="{x:Null}" PersonOrGroup="{x:Null}" x:Name="__ReferenceID23" DisplayName="App Modified By" Guid="e08400f3-c779-4ed2-a18c-ab7f34caa318" Hidden="False" IsRequired="False" LookupListId="AppPrincipals" Name="AppEditor" ReadOnly="True" Type="Lookup">
                                                                            <umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                              <umsmc:LookupColumnMetadata ColumnName="Title" MultiSelect="False" />
                                                                            </umsm:Office365SharepointListColumnSlim.LookupColumn>
                                                                            <umsm:Office365SharepointListColumnSlim.Sample>
                                                                              <umsm:ColumnSample Value="UiPath for OneDrive and SharePoint" />
                                                                            </umsm:Office365SharepointListColumnSlim.Sample>
                                                                          </umsm:Office365SharepointListColumnSlim>
                                                                        </x:Array>
                                                                      </umas:UpdateListItemConnections.AllColumns>
                                                                      <umas:UpdateListItemConnections.ListArgument>
                                                                        <umasm:ListArgument Backup="{x:Reference __ReferenceID0}" ConnectionDescriptor="{x:Null}" ManualEntryListNameOrId="{x:Null}" ManualEntrySiteUrl="{x:Null}" BrowserListFriendlyName="Remittance Tracking List" BrowserListId="da38d49a-2ba0-46a8-a489-0be0986cfabf" BrowserSiteUrl="fambrandsllc.sharepoint.com,82e2bc74-f50c-46c9-8739-724fdf158658,4e899f91-a492-4584-a92b-6fb0d3048e54" ConnectionKey="70561a49-dff9-438c-b574-21d11cd8d904" ItemSelectionMode="Browse" />
                                                                      </umas:UpdateListItemConnections.ListArgument>
                                                                      <umas:UpdateListItemConnections.ListItemBackup>
                                                                        <usau:BackupSlot x:TypeArguments="umase:ItemSelectionMode" x:Name="__ReferenceID0" StoredValue="Browse">
                                                                          <usau:BackupSlot.BackupValues>
                                                                            <scg:Dictionary x:TypeArguments="umase:ItemSelectionMode, scg:List(x:Object)" />
                                                                          </usau:BackupSlot.BackupValues>
                                                                        </usau:BackupSlot>
                                                                      </umas:UpdateListItemConnections.ListItemBackup>
                                                                      <umas:UpdateListItemConnections.State>
                                                                        <umas:ActivityState>
                                                                          <umas:ActivityState.SelectedFields>
                                                                            <scg:List x:TypeArguments="umas:DynamicField" Capacity="1">
                                                                              <umas:DynamicField Id="242a6833-5f72-41a4-89c9-dff3a0c1322c" Name="Status">
                                                                                <umas:DynamicField.ArgumentValue>
                                                                                  <InArgument x:TypeArguments="x:String">[Config("SharepointStatus").ToString]</InArgument>
                                                                                </umas:DynamicField.ArgumentValue>
                                                                              </umas:DynamicField>
                                                                            </scg:List>
                                                                          </umas:ActivityState.SelectedFields>
                                                                        </umas:ActivityState>
                                                                      </umas:UpdateListItemConnections.State>
                                                                    </umas:UpdateListItemConnections>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,227.2" sap2010:WorkflowViewState.IdRef="Sequence_112">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_130" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["The Remittance List ID is null"]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </Sequence>
                                                                </If.Else>
                                                              </If>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:RetryScope.ActivityBody>
                                                        <ui:RetryScope.Condition>
                                                          <ActivityFunc x:TypeArguments="x:Boolean" />
                                                        </ui:RetryScope.Condition>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:RetryScope>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="528,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ActivityAction x:TypeArguments="s:ArgumentException">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Rethrow sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="561.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_70" Level="Trace" Message="[String.Format(&quot;[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]&quot;, CurrentStateError, BusinessException.GetType().ToString(), BusinessException.Message, BusinessException.Source)]" />
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="561.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_115" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">ERROR</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[String.Format("[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]", CurrentStateError, BusinessException.GetType().ToString(), BusinessException.Message, BusinessException.Source)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="561.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_116" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[ErrorLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">ERROR</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[String.Format("[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]", CurrentStateError, BusinessException.GetType().ToString(), BusinessException.Message, BusinessException.Source)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendHtmlBasedEmail - Invoke Workflow File (Framework\Utilities\SendHtmlBasedEmail.xaml)" sap:VirtualizedContainerService.HintSize="561.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_117" UnSafe="False" WorkflowFileName="Framework\Utilities\SendHtmlBasedEmail.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_HtmlEmailTitle">[Config("TechnicalExceptionEmailBodyTitle").ToString.Trim + String.Format(" ({0})", in_Environment)]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CommaSeparetedEmails">[Config("TechnicalUsersEmailIDs").ToString + "," + BusinessGeneralConfig("BusinessUsersEmailIDs").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("ExceptionEmailSubject").ToString.trim.replace("[Date]", now.ToString("yyyy-MM-dd")).Replace("[Time]", now.ToString("hh:mm:ss"))]</InArgument>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" x:Key="in_Attachment">[ListOfAttachment]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Footer">[Config("EmailFooter").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Config("EmailFailureStatusBody").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName">[CurrentStateError]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">[BusinessException.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_RemittaceFileName">[RemittanceFileName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[RemittanceCountryName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds" />
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="561.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_71" Level="Info" Message="[&quot;Email sent successfully for the current execution&quot;]" />
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="561.6,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_118" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">INFO</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Email sent successfully for the current execution</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else - System Exception Only Developer" sap:VirtualizedContainerService.HintSize="595.2,2332" sap2010:WorkflowViewState.IdRef="Sequence_100">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="561.6,1228" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <TryCatch.Try>
                                                      <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope - Updating failed status to remittace list" sap:VirtualizedContainerService.HintSize="524.8,964.8" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="[CInt(Config(&quot;MaxRetryCount&quot;).ToString.Trim)]" RetryInterval="[TimeSpan.FromSeconds(CInt(Config(&quot;RetryInterval&quot;).ToString.Trim))]">
                                                        <ui:RetryScope.ActivityBody>
                                                          <ActivityAction>
                                                            <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="483.2,788.8" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If Condition="[Not String.IsNullOrEmpty(SharepointRemittanceListID)]" sap:VirtualizedContainerService.HintSize="449.6,728.8" sap2010:WorkflowViewState.IdRef="If_35">
                                                                <If.Then>
                                                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,340" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <umas:UpdateListItemConnections x:TypeArguments="sd2:DataRow29" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" DataRow="{x:Null}" ListNameOrId="{x:Null}" Result="{x:Null}" SiteUrl="{x:Null}" AuthScopesInvalid="False" BrowserListFriendlyName="Remittance Tracking List" BrowserListId="da38d49a-2ba0-46a8-a489-0be0986cfabf" BrowserSiteUrl="fambrandsllc.sharepoint.com,82e2bc74-f50c-46c9-8739-724fdf158658,4e899f91-a492-4584-a92b-6fb0d3048e54" ConnectionId="70561a49-dff9-438c-b574-21d11cd8d904" DisplayName="Update Single List Item" sap:VirtualizedContainerService.HintSize="382.4,280" sap2010:WorkflowViewState.IdRef="UpdateListItemConnections`1_3" ItemId="[SharepointRemittanceListID]" ItemSelectionMode="Browse" UseConnectionService="True">
                                                                      <umas:UpdateListItemConnections.AllColumns>
                                                                        <x:Array Type="umsm:Office365SharepointListColumnSlim">
                                                                          <x:Reference>__ReferenceID2</x:Reference>
                                                                          <x:Reference>__ReferenceID3</x:Reference>
                                                                          <x:Reference>__ReferenceID4</x:Reference>
                                                                          <x:Reference>__ReferenceID5</x:Reference>
                                                                          <x:Reference>__ReferenceID6</x:Reference>
                                                                          <x:Reference>__ReferenceID7</x:Reference>
                                                                          <x:Reference>__ReferenceID8</x:Reference>
                                                                          <x:Reference>__ReferenceID9</x:Reference>
                                                                          <x:Reference>__ReferenceID10</x:Reference>
                                                                          <x:Reference>__ReferenceID11</x:Reference>
                                                                          <x:Reference>__ReferenceID12</x:Reference>
                                                                          <x:Reference>__ReferenceID13</x:Reference>
                                                                          <x:Reference>__ReferenceID14</x:Reference>
                                                                          <x:Reference>__ReferenceID15</x:Reference>
                                                                          <x:Reference>__ReferenceID16</x:Reference>
                                                                          <x:Reference>__ReferenceID17</x:Reference>
                                                                          <x:Reference>__ReferenceID18</x:Reference>
                                                                          <x:Reference>__ReferenceID19</x:Reference>
                                                                          <x:Reference>__ReferenceID20</x:Reference>
                                                                          <x:Reference>__ReferenceID21</x:Reference>
                                                                          <x:Reference>__ReferenceID22</x:Reference>
                                                                          <x:Reference>__ReferenceID23</x:Reference>
                                                                        </x:Array>
                                                                      </umas:UpdateListItemConnections.AllColumns>
                                                                      <umas:UpdateListItemConnections.ListArgument>
                                                                        <umasm:ListArgument Backup="{x:Reference __ReferenceID1}" ConnectionDescriptor="{x:Null}" ManualEntryListNameOrId="{x:Null}" ManualEntrySiteUrl="{x:Null}" BrowserListFriendlyName="Remittance Tracking List" BrowserListId="da38d49a-2ba0-46a8-a489-0be0986cfabf" BrowserSiteUrl="fambrandsllc.sharepoint.com,82e2bc74-f50c-46c9-8739-724fdf158658,4e899f91-a492-4584-a92b-6fb0d3048e54" ConnectionKey="70561a49-dff9-438c-b574-21d11cd8d904" ItemSelectionMode="Browse" />
                                                                      </umas:UpdateListItemConnections.ListArgument>
                                                                      <umas:UpdateListItemConnections.ListItemBackup>
                                                                        <usau:BackupSlot x:TypeArguments="umase:ItemSelectionMode" x:Name="__ReferenceID1" StoredValue="Browse">
                                                                          <usau:BackupSlot.BackupValues>
                                                                            <scg:Dictionary x:TypeArguments="umase:ItemSelectionMode, scg:List(x:Object)" />
                                                                          </usau:BackupSlot.BackupValues>
                                                                        </usau:BackupSlot>
                                                                      </umas:UpdateListItemConnections.ListItemBackup>
                                                                      <umas:UpdateListItemConnections.State>
                                                                        <umas:ActivityState>
                                                                          <umas:ActivityState.SelectedFields>
                                                                            <scg:List x:TypeArguments="umas:DynamicField" Capacity="1">
                                                                              <umas:DynamicField Id="242a6833-5f72-41a4-89c9-dff3a0c1322c" Name="Status">
                                                                                <umas:DynamicField.ArgumentValue>
                                                                                  <InArgument x:TypeArguments="x:String">[Config("StatusFailedState").ToString]</InArgument>
                                                                                </umas:DynamicField.ArgumentValue>
                                                                              </umas:DynamicField>
                                                                            </scg:List>
                                                                          </umas:ActivityState.SelectedFields>
                                                                        </umas:ActivityState>
                                                                      </umas:UpdateListItemConnections.State>
                                                                    </umas:UpdateListItemConnections>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,227.2" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_129" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["The Remittance List ID is null"]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </Sequence>
                                                                </If.Else>
                                                              </If>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:RetryScope.ActivityBody>
                                                        <ui:RetryScope.Condition>
                                                          <ActivityFunc x:TypeArguments="x:Boolean" />
                                                        </ui:RetryScope.Condition>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:RetryScope>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="528,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ActivityAction x:TypeArguments="s:ArgumentException">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Rethrow sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="561.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_72" Level="Error" Message="[String.Format(&quot;[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]&quot;, CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]" />
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="561.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_119" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">ERROR</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[String.Format("[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]", CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="561.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_120" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[ErrorLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">ERROR</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">[String.Format("[ERROR] [UiPath.Core] [State: {0}] - Exception occurred during execution: {1} - [Error Message: '{2}' at {3}]", CurrentStateError, SystemException.GetType().ToString(), SystemException.Message, SystemException.Source)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendHtmlBasedEmail - Invoke Workflow File (Framework\Utilities\SendHtmlBasedEmail.xaml)" sap:VirtualizedContainerService.HintSize="561.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_121" UnSafe="False" WorkflowFileName="Framework\Utilities\SendHtmlBasedEmail.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_HtmlEmailTitle">[Config("TechnicalExceptionEmailBodyTitle").ToString.Trim + String.Format(" ({0})", in_Environment)]</InArgument>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CommaSeparetedEmails">[Config("TechnicalUsersEmailIDs").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("ExceptionEmailSubject").ToString.trim.replace("[Date]", now.ToString("yyyy-MM-dd")).Replace("[Time]", now.ToString("hh:mm:ss"))]</InArgument>
                                                      <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" x:Key="in_Attachment">[ListOfAttachment]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Footer">[Config("EmailFooter").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Config("EmailFailureStatusBody").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName">[CurrentStateError]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage">[SystemException.Message]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_RemittaceFileName">[RemittanceFileName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[RemittanceCountryName]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds" />
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="561.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_73" Level="Fatal" Message="[&quot;Email sent successfully for the current execution&quot;]" />
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="561.6,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_122" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">INFO</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Email sent successfully for the current execution</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="Else - Success email to both business and developer" sap:VirtualizedContainerService.HintSize="416,577.6" sap2010:WorkflowViewState.IdRef="Sequence_104">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendHtmlBasedEmail - Invoke Workflow File (Framework\Utilities\SendHtmlBasedEmail.xaml)" sap:VirtualizedContainerService.HintSize="382.4,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_123" UnSafe="False" WorkflowFileName="Framework\Utilities\SendHtmlBasedEmail.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_HtmlEmailTitle">[Config("TechnicalExceptionEmailBodyTitle").ToString.Trim + String.Format(" ({0})", in_Environment)]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CommaSeparetedEmails">[Config("TechnicalUsersEmailIDs").ToString + "," + BusinessGeneralConfig("BusinessUsersEmailIDs").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("SuccessEmailSubject").ToString.trim.replace("[Date]", now.ToString("yyyy-MM-dd")).Replace("[Time]", now.ToString("hh:mm:ss"))]</InArgument>
                                          <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" x:Key="in_Attachment">[ListOfAttachment]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Footer">[Config("EmailFooter").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Config("EmailSuccessStatusBody").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ErrorMessage" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_RemittaceFileName">[RemittanceFileName]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[RemittanceCountryName]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing">[BatchProcessingStatus]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds" />
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382.4,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_74" Level="Fatal" Message="[&quot;Email sent successfully for the current execution&quot;]" />
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="LogWriting - Invoke Workflow File (Framework\LogWriting.xaml)" sap:VirtualizedContainerService.HintSize="382.4,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_125" UnSafe="False" WorkflowFileName="Framework\Utilities\LogWriting.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[AuditLogFilePath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogLevel">INFO</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessage">Email sent successfully for the current execution</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="800,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Failed to close applications, so kill processes" sap:VirtualizedContainerService.HintSize="416,225.6" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log message (Failed to close applications)" sap:VirtualizedContainerService.HintSize="382.4,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Warn" Message="[&quot;Applications failed to close gracefully. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="si:IOException" sap:VirtualizedContainerService.HintSize="800,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="si:IOException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="si:IOException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="Error" Message="[exception.Message]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <Sequence sap:VirtualizedContainerService.HintSize="470.4,518.4" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <TryCatch sap2010:Annotation.AnnotationText="Close all applications before returning to the Initialization state and opening them again.&#xA;If applications cannot be closed, kill their respective processes." DisplayName="Try closing applications" sap:VirtualizedContainerService.HintSize="436.8,458.4" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="True" DisplayName="KillAllProcesses - Invoke Workflow File (Framework\ProcessWorkflows\KillAllProcesses.xaml)" sap:VirtualizedContainerService.HintSize="334.4,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_95" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Close applications" sap:VirtualizedContainerService.HintSize="470.4,632.8" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log message (CloseAllApplications failed)" sap:VirtualizedContainerService.HintSize="436.8,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="Warn" Message="[&quot;CloseAllApplications failed. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                          <TryCatch DisplayName="Try killing processes" sap:VirtualizedContainerService.HintSize="436.8,398.4" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334.4,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_93" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\KillAllProcesses.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:LogMessage DisplayName="Log message (KillAllProcesses failed)" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_65" Level="Warn" Message="[&quot;KillAllProcesses failed. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </Sequence>
                            </TryCatch.Finally>
                          </TryCatch>
                        </Sequence>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">550,0</av:Point>
                          <av:Size x:Key="ShapeSize">200,168</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">188.00041159900604</x:Double>
                          <x:Double x:Key="StateContainerHeight">29</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="448.8,490.4" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">720,901.96 780,901.96 780,42 750,42</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">44</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">16</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID24</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[SystemException IsNot Nothing]</Transition.Condition>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="Business Rule Exception" DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="448.8,537.6" sap2010:WorkflowViewState.IdRef="Transition_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">480,772.72 450,772.72 450,117.60000000000001 550,117.60000000000001</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">33</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">53</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID24</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[BusinessException IsNot Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (New transaction retrieved)" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
          </Transition.Action>
          <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
        </Transition>
        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap:VirtualizedContainerService.HintSize="448.8,582.4" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">650,235 650,168</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">38</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID24</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (No more transations available)" sap:VirtualizedContainerService.HintSize="335.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
          </Transition.Action>
          <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="BooleanFirst" />
      </State.Variables>
    </State>
    <x:Reference>__ReferenceID25</x:Reference>
    <x:Reference>__ReferenceID24</x:Reference>
    <State x:Name="__ReferenceID27" sap2010:Annotation.AnnotationText="This section performs all necessary setup before processing transactions.&#xA;It includes:&#xA;&#xA;1.Creating required folder structures for the current execution&#xA;2.Downloading Business Config, Performer Config, from the Storage Bucket&#xA;3.Reading all configuration data including:&#xA;         1.Technical settings and constants&#xA;         2.Regex rules for chargeback type mapping&#xA;         3.Business config dropdown and lookup values&#xA;4. Downloading the monthly Master file and Lookup files from SharePoint&#xA;5.Initializing all required applications and systems&#xA;6.Logging into the Costco Portal.&#xA;" DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="232,472" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <TryCatch DisplayName="Try initializing settings and applications" sap:VirtualizedContainerService.HintSize="638.4,4574.4" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence sap:VirtualizedContainerService.HintSize="601.6,4343.2" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - in_OrchestratorFolderPath" sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_46">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[in_OrchestratorFolderPath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_OrchestratorFolderPath.Replace("\","/")]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - CurrentStateError" sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_36">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[CurrentStateError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Initialization</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign SystemException (initialization)" sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign DisplayName="Assign - BusinessException" sap:VirtualizedContainerService.HintSize="568,113.6" sap2010:WorkflowViewState.IdRef="Assign_34">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PerformerFolderCreation - Invoke Workflow File (DispatcherFolderCreation.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Framework\Utilities\PerformerFolderCreation.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RootFolderPath">[in_RootFolderPath]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_AuditLogs">[AuditLogFilePath]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_ErrorLogs">[ErrorLogFilePath]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[in_ProcessName]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="CurrentDate">[CurrentDate]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFolderName">[in_ConfigFolderName]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_ConfigFolderPath">[ConfigFolderPath]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_InputFolderPath">[InputFolderPath]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_OutputFolderPath">[OutputFolderPath]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_96" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Initialization State"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_97" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Folder Created Successfully"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="DownloadStorageBucketFiles - Invoke Workflow File (StorageBucket.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_89" UnSafe="False" WorkflowFileName="Framework\Initialization\DownloadStorageBucketFiles.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigName">[in_TechnicalConfigPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BusinessConfigName">[in_BusinessConfigPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OrchastratorFolderPath">[in_OrchestratorFolderPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StorageBucketName">[in_StorageBucketName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RootDirectory">[in_RootDirectory]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_ConfigFilePath">[TechnicalConfigFilePath]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFolderPath">[ConfigFolderPath]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_BusinessConfigFilePath">[BusinessConfigFilePath]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_98" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Successfully downloaded UiPath Storage bucket files"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Sequence DisplayName="Load configurations and open applications" sap:VirtualizedContainerService.HintSize="568,1828.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If sap2010:Annotation.AnnotationText="An uninitialized Config dictionary indicates that it is the first run of the process." Condition="[Config is Nothing]" DisplayName="If first run, read local configuration file" sap:VirtualizedContainerService.HintSize="534.4,1484.8" sap2010:WorkflowViewState.IdRef="If_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="500.8,1258.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="467.2,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\Initialization\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_RootFolder">[in_RootFolderPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">[in_ProcessName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigName">[in_TechnicalConfigPath]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFolderName">[in_ConfigFolderName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TechnicalConfigFilePath">[TechnicalConfigFilePath]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If sap2010:Annotation.AnnotationText="Overwrite queue name from in configuration file in case the argument in_OrchestratorQueueName is specified.&#xA;This provides backward compatibility with &lt; 2018.3." Condition="[Not String.IsNullOrWhiteSpace(in_OrchestratorQueueName)]" DisplayName="If in_OrchestratorQueueName is specified" sap:VirtualizedContainerService.HintSize="467.2,424" sap2010:WorkflowViewState.IdRef="If_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign DisplayName="Assign OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_20">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[in_OrchestratorQueueName]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_39">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <If sap2010:Annotation.AnnotationText="Overwrite folder name from in configuration file in case the argument in_OrchestratorQueueFolder is specified.&#xA;This provides backward compatibility with &lt; 2018.3." Condition="[Not String.IsNullOrWhiteSpace(in_OrchestratorFolderPath)]" DisplayName="If in_OrchestratorQueueFolder is specified" sap:VirtualizedContainerService.HintSize="467.2,180.8" sap2010:WorkflowViewState.IdRef="If_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign DisplayName="Assign OrchestratorQueueFolder" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_28">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueFolder")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[in_OrchestratorFolderPath]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_40">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow (first run)" sap:VirtualizedContainerService.HintSize="467.2,228.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\ProcessWorkflows\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                      <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the process name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (BusinessProcessName)" sap:VirtualizedContainerService.HintSize="467.2,188.8" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                        </ui:AddLogFields.Fields>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:AddLogFields>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If sap2010:Annotation.AnnotationText="If MaxConsecutiveSystemExceptions number was reached, throw Exception at initialization and go to End Process state, thus finalizing the execution. &#xA;If MaxConsecutiveSystemExceptions is 0, then any number of consecutive System Exceptions is allowed." Condition="[Cint(Config(&quot;MaxConsecutiveSystemExceptions&quot;))&gt;0 AndAlso ConsecutiveSystemExceptions&gt;=Cint(Config(&quot;MaxConsecutiveSystemExceptions&quot;))]" DisplayName="If maxConsecutiveSystemExceptions exceeded" sap:VirtualizedContainerService.HintSize="534.4,252" sap2010:WorkflowViewState.IdRef="If_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Throw DisplayName="Throw Consecutive Exceptions exceeded" Exception="[new Exception(Config(&quot;ExceptionMessage_ConsecutiveErrors&quot;).ToString + &quot; Consecutive retry number: &quot; + (ConsecutiveSystemExceptions+1).ToString)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <If Condition="[Not string.IsNullOrWhiteSpace(in_AssetCredentialName)]" sap:VirtualizedContainerService.HintSize="568,424.8" sap2010:WorkflowViewState.IdRef="If_29">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_79">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Asset Credential Name" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_45">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[Config("AssetCredentialName")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[in_AssetCredentialName]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_80">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ReadBusinessSheetDropdownColumnNames - Invoke Workflow File (Framework\Config\ReadBusinessSheetDropdownColumnNames.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_90" UnSafe="False" WorkflowFileName="Framework\Config\ReadBusinessConfigGeneral.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BusinessConfigSheetPath">[BusinessConfigFilePath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_BusinessConfigSheetName">[Config("BusinessDropdownConfigSheetName").ToString]</InArgument>
                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_BusinessGeneralConfig">[BusinessGeneralConfig]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_HolidaysColumnName">[Config("BusinessNationalHolidayColumnName").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_HolidayDatesSheetName">[Config("BusinessHolidayDatesSheetNames").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_99" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Business and technical configs have been read successfully"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[AuditLogFilePath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Downloading the files from sharepoint - Invoke Workflow File (ProcessCsv.xaml)" sap:VirtualizedContainerService.HintSize="568,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_44" UnSafe="False" WorkflowFileName="Framework\SharePoint\DownloadFilesFromSharepoint.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_RootDirectory">[in_RootDirectory]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_StorageBucketName">[in_StorageBucketName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OrchastratorFolderPath">[in_OrchestratorFolderPath]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_ConfigCsv">[Config]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_AllCostcoFile">[AllCostcoFilePath]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_GstReceivablePayment">[GstReceivablePaymentPath]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_OrderReport">[OrderReportFilePath]</OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_AuditLogFilePath">[AuditLogFilePath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_InputFolderPath">[InputFolderPath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="568,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_109" UnSafe="False" WorkflowFileName="Framework\Initialization\InitAllApplications.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OrchastratorFolderPath">[in_OrchestratorFolderPath]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_AuditFilePath">[AuditLogFilePath]</InArgument>
                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="io_HasLoggedin">[HasLoggedInSuccessful]</InOutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OutputFolderPath">[OutputFolderPath]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="604.8,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                </ActivityAction.Argument>
                <Assign sap2010:Annotation.AnnotationText="Failures during the initialization are considered system exceptions and lead to the End Process state, thus finalizing the execution." DisplayName="Assign SystemException" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">164,98</av:Point>
          <av:Size x:Key="ShapeSize">232,472</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">220</x:Double>
          <x:Double x:Key="StateContainerHeight">29</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="System Exception (failed initialization)" sap:VirtualizedContainerService.HintSize="448.8,522.4" sap2010:WorkflowViewState.IdRef="Transition_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">396,286.8 426,286.8 426,75.60000000000001 550,75.60000000000001</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">28</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">33</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID24</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log Message (initialization failure)" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error" Message="[&quot;System exception at initialization: &quot; + SystemException.Message + &quot; at Source: &quot; + SystemException.Source]" />
          </Transition.Action>
          <Transition.Condition>
            <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemException isNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="Successful" sap:VirtualizedContainerService.HintSize="448.8,802.4" sap2010:WorkflowViewState.IdRef="Transition_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Int32 x:Key="SrcConnectionPointIndex">48</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">29</x:Int32>
              <av:PointCollection x:Key="ConnectorLocation">396,404.8 426,404.8 426,278.84000000000003 530,278.84000000000003</av:PointCollection>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID26</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:Comment DisplayName="Comment (default transition)" sap:VirtualizedContainerService.HintSize="333.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
          </Transition.Action>
          <Transition.Condition>[SystemException is Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
      <State.Variables>
        <Variable x:TypeArguments="x:String" Name="variable1" />
      </State.Variables>
    </State>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Transaction item to be processed. The type of this variable can be changed to match the transaction type in the process. For example, when processing data from a spreadsheet that is read into a DataTable, this type can be changed to DataRow. " Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used during transitions between states to represent exceptions other than business exceptions." Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" sap2010:Annotation.AnnotationText="Used during transitions between states and represents a situation that does not conform to the rules of the process being automated." Name="BusinessException" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="Config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying the transaction processing in case of system exceptions." Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Used in case transactions are stored in a DataTable, for example, after being retrieved from a spreadsheet." Name="dt_TransactionData" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of consecutive system exceptions." Default="0" Name="ConsecutiveSystemExceptions" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="BusinessGeneralConfig" />
      <Variable x:TypeArguments="x:String" Name="CurrentDate" />
      <Variable x:TypeArguments="x:String" Name="ErrorLogFilePath" />
      <Variable x:TypeArguments="x:String" Name="AuditLogFilePath" />
      <Variable x:TypeArguments="x:String" Name="BusinessConfigFilePath" />
      <Variable x:TypeArguments="x:String" Name="TechnicalConfigFilePath" />
      <Variable x:TypeArguments="x:String" Name="AllCostcoFilePath" />
      <Variable x:TypeArguments="x:String" Name="GstReceivablePaymentPath" />
      <Variable x:TypeArguments="x:String" Name="OrderReportFilePath" />
      <Variable x:TypeArguments="x:String" Name="CurrentStateError" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="HasLoggedInSuccessful" />
      <Variable x:TypeArguments="x:String" Name="ConfigFolderPath" />
      <Variable x:TypeArguments="x:String" Name="InputFolderPath" />
      <Variable x:TypeArguments="x:String" Name="OutputFolderPath" />
      <Variable x:TypeArguments="x:String" Name="RemittanceCountryName" />
      <Variable x:TypeArguments="x:String" Name="RemittanceFileName" />
      <Variable x:TypeArguments="x:String" Name="SharepointRemittanceListID" />
      <Variable x:TypeArguments="x:String" Name="BatchProcessingStatus" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>