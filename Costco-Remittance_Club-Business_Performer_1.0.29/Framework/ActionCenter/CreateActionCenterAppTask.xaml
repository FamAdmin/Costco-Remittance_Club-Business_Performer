<Activity mc:Ignorable="sap sap2010" x:Class="CreateActionCenterAppTask" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upama="clr-namespace:UiPath.Persistence.Activities.Model.Apps;assembly=UiPath.Persistence.Activities" xmlns:upau="clr-namespace:UiPath.Persistence.Activities.UserAction;assembly=UiPath.Persistence.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_BusinessRuleExceptionData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_OrchestratorFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_BusinessDropdownConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_CreateAppTask" Type="OutArgument(upau:UserActionData)" />
    <x:Property Name="in_AuditLogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_RemittanceFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentBatchNumber" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:CreateActionCenterAppTask.in_AuditLogFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:CreateActionCenterAppTask.in_AuditLogFilePath>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CreateActionCenterAppTask_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Apps</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>UiPath.Persistence.Activities.UserAction</x:String>
      <x:String>UiPath.Persistence.Activities.BaseTask</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow19</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow18</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow12</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow10</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow9</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow11</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow25</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow17</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow22</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow27</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow14</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow1</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow3</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable4</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable21</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable7</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow8</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow28</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow2</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow6</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow26</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow15</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow24</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow20</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow16</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow13</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataRow23</AssemblyReference>
      <AssemblyReference>Studio.Generated.TypedDataTable5</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Costco-Remittance_Club-Business_Performer.Core</AssemblyReference>
      <AssemblyReference>Costco-Remittance_Club-Business_Performer.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CreateActionCenterAppTask" sap:VirtualizedContainerService.HintSize="1452.0000000000002,2761.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="645.6,2738.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="Create action center task to add human in the loop to validate the remittance data" sap:VirtualizedContainerService.HintSize="608.8,2484" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="scg:List(x:String)" Name="ListOfChargebackDropdown" />
            <Variable x:TypeArguments="scg:List(x:String)" Name="EditableColumnNames" />
            <Variable x:TypeArguments="x:Int32" Name="LastRowIndexBusinessRuleException" />
            <Variable x:TypeArguments="scg:List(x:String)" Name="ActionCenterUnnecssaryColumnName" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_UpdatedData" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="ListOfChargebackDropdown" sap:VirtualizedContainerService.HintSize="575.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[ListOfChargebackDropdown]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[in_BusinessDropdownConfig("ChargeBackTypeList").ToString().split(",").Select(Function(Item) item.Trim()).toList()]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="EditableColumnNames" sap:VirtualizedContainerService.HintSize="575.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[EditableColumnNames]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[in_Config("BusinessRuleColumnNames").ToString().split(",").Select(Function(Item) item.Trim()).toList()]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="LastRowIndexBusinessRuleException" sap:VirtualizedContainerService.HintSize="575.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[LastRowIndexBusinessRuleException]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_BusinessRuleExceptionData.Rows.Count-1]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="ActionCenterUnnecssaryColumnName" sap:VirtualizedContainerService.HintSize="575.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[ActionCenterUnnecssaryColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[in_Config("ActionCenterUnnecssaryColumnName").ToString().split(",").Select(Function(Item) item.Trim()).toList()]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each CurrentUnecessaryColumnName" sap:VirtualizedContainerService.HintSize="575.2,417.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[ActionCenterUnnecssaryColumnName]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="CurrentUnecessaryColumnName" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,271.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[CurrentUnecessaryColumnName]" DataTable="[in_BusinessRuleExceptionData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="382.4,211.2" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="575.2,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">[String.Format("Removed unnecessary columns from Action Center DataTable. Columns: {0}", String.Join(", ", ActionCenterUnnecssaryColumnName))]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[in_AuditLogFilePath]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each currentDataColumn" sap:VirtualizedContainerService.HintSize="575.2,653.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_BusinessRuleExceptionData.Columns]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataColumn">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="currentDataColumn" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="541.6,507.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText=" If - Check any business rule columns are empty in datatable add empty string" Condition="[string.IsNullOrEmpty(in_BusinessRuleExceptionData.Rows(0)(currentDataColumn).ToString)]" DisplayName=" If - Check any business rule columns are empty in datatable add empty string" sap:VirtualizedContainerService.HintSize="508,447.2" sap2010:WorkflowViewState.IdRef="If_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign current empty column to empty string" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[in_BusinessRuleExceptionData.Rows(0)(currentDataColumn)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="575.2,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Creating action center task"]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[in_AuditLogFilePath]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:RetryScope DisplayName="Retry Scope - Create App Task" sap:VirtualizedContainerService.HintSize="575.2,348" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[CInt(in_Config(&quot;MaxRetryCount&quot;).ToString.Trim)]" RetryInterval="[TimeSpan.FromSeconds(CInt(in_Config(&quot;RetryInterval&quot;).ToString.Trim))]">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="416,140" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <upau:CreateUserAction ExternalTag="{x:Null}" Labels="{x:Null}" PrimaryActionableOutcome="{x:Null}" PrimaryButtonLabel="{x:Null}" SecondaryActionableOutcome="{x:Null}" SecondaryButtonLabel="{x:Null}" TaskCatalog="{x:Null}" TaskFieldsForDesktop="{x:Null}" TaskFieldsForWeb="{x:Null}" TimeoutMs="{x:Null}" ActionableNotification="False" DisplayName="Create App Task" EnforcePropertyRefresh="False" FolderPath="[in_OrchestratorFolderPath]" sap:VirtualizedContainerService.HintSize="382.4,80" sap2010:WorkflowViewState.IdRef="CreateUserAction_1" SolutionApp="Remittance_Validation_App" SolutionTaskCatalog="[Nothing]" TaskOutput="[out_CreateAppTask]" TaskPriority="Medium" TaskTitle="[string.Format(&quot;{0} - '{1}' - #{2} &quot;, in_Config(&quot;ValidationTaskTitle&quot;).ToString, in_RemittanceFileName, (in_CurrentBatchNumber + 1).ToString)]">
                    <upau:CreateUserAction.AppActionData>
                      <InArgument x:TypeArguments="x:String" x:Key="in_DropdownColumnName">[in_Config("ChargebackTypeColumnName").ToString]</InArgument>
                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_DropdownList">[ListOfChargebackDropdown]</InArgument>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_Data">[in_BusinessRuleExceptionData]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_LinkColumnName">[in_Config("PdfAttachmentLinkColumnName").ToString]</InArgument>
                      <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListOfEditableColumns">[EditableColumnNames]</InArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_UpdatedData">[dt_UpdatedData]</OutArgument>
                    </upau:CreateUserAction.AppActionData>
                    <upau:CreateUserAction.AppActionPropertiesMetadata>
                      <upama:SchemaPropertiesMetadata Format="{x:Null}" x:Key="in_DropdownColumnName" />
                      <upama:SchemaPropertiesMetadata x:Key="in_DropdownList" Format="List" />
                      <upama:SchemaPropertiesMetadata x:Key="in_dt_Data" Format="DataTable" />
                      <upama:SchemaPropertiesMetadata Format="{x:Null}" x:Key="in_LinkColumnName" />
                      <upama:SchemaPropertiesMetadata x:Key="in_ListOfEditableColumns" Format="List" />
                      <upama:SchemaPropertiesMetadata x:Key="out_dt_UpdatedData" Format="DataTable" />
                    </upau:CreateUserAction.AppActionPropertiesMetadata>
                    <upau:CreateUserAction.CurrentAppTaskState>
                      <upama:AppTaskState CodeBehindProcessKey="{x:Null}" CodeBehindRuntimeType="{x:Null}" AppId="ID1eb76d9466ee42798228945c812ad1be" AppName="Remittance_Validation_App" AppVersion="2" FolderKey="ddb58acd-464e-4e31-88cf-49641ef6ed54" />
                    </upau:CreateUserAction.CurrentAppTaskState>
                    <upau:CreateUserAction.State>
                      <upama:RecordDynamicActionPropertiesState>
                        <upama:RecordDynamicActionPropertiesState.AllowedActions>
                          <scg:List x:TypeArguments="x:String" Capacity="1">
                            <x:String>Submit</x:String>
                          </scg:List>
                        </upama:RecordDynamicActionPropertiesState.AllowedActions>
                        <upama:RecordDynamicActionPropertiesState.SelectedFields>
                          <scg:List x:TypeArguments="upama:DynamicActionDefinitionSchemaField" Capacity="6">
                            <upama:DynamicActionDefinitionSchemaField Direction="In" IsRequired="False" Name="in_dt_Data" PropertyFormat="DataTable" PropertyType="System.Data.DataTable">
                              <upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                                <InArgument x:TypeArguments="sd:DataTable">[in_BusinessRuleExceptionData]</InArgument>
                              </upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                            </upama:DynamicActionDefinitionSchemaField>
                            <upama:DynamicActionDefinitionSchemaField Direction="In" IsRequired="False" Name="in_DropdownList" PropertyFormat="List" PropertyType="System.String">
                              <upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                                <InArgument x:TypeArguments="scg:List(x:String)">[ListOfChargebackDropdown]</InArgument>
                              </upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                            </upama:DynamicActionDefinitionSchemaField>
                            <upama:DynamicActionDefinitionSchemaField PropertyFormat="{x:Null}" Direction="In" IsRequired="False" Name="in_DropdownColumnName" PropertyType="System.String">
                              <upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                                <InArgument x:TypeArguments="x:String">[in_Config("ChargebackTypeColumnName").ToString]</InArgument>
                              </upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                            </upama:DynamicActionDefinitionSchemaField>
                            <upama:DynamicActionDefinitionSchemaField PropertyFormat="{x:Null}" Direction="In" IsRequired="False" Name="in_LinkColumnName" PropertyType="System.String">
                              <upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                                <InArgument x:TypeArguments="x:String">[in_Config("PdfAttachmentLinkColumnName").ToString]</InArgument>
                              </upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                            </upama:DynamicActionDefinitionSchemaField>
                            <upama:DynamicActionDefinitionSchemaField Direction="In" IsRequired="False" Name="in_ListOfEditableColumns" PropertyFormat="List" PropertyType="System.String">
                              <upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                                <InArgument x:TypeArguments="scg:List(x:String)">[EditableColumnNames]</InArgument>
                              </upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                            </upama:DynamicActionDefinitionSchemaField>
                            <upama:DynamicActionDefinitionSchemaField Direction="Out" IsRequired="False" Name="out_dt_UpdatedData" PropertyFormat="DataTable" PropertyType="System.Data.DataTable">
                              <upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                                <OutArgument x:TypeArguments="sd:DataTable">[dt_UpdatedData]</OutArgument>
                              </upama:DynamicActionDefinitionSchemaField.ArgumentValue>
                            </upama:DynamicActionDefinitionSchemaField>
                          </scg:List>
                        </upama:RecordDynamicActionPropertiesState.SelectedFields>
                      </upama:RecordDynamicActionPropertiesState>
                    </upau:CreateUserAction.State>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </upau:CreateUserAction>
                </Sequence>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:RetryScope>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="InfoWriteLog - Invoke Workflow File (Framework\Utilities\InfoWriteLog.xaml)" sap:VirtualizedContainerService.HintSize="575.2,167.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\Utilities\InfoWriteLog.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Object" x:Key="in_LogMessage">["Action center task created, task ID - " + out_CreateAppTask.Id.ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_LogFilePath">[in_AuditLogFilePath]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="612,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>