<Activity mc:Ignorable="sap sap2010" x:Class="SendHtmlBasedEmail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umamm="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Models;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_HtmlEmailTitle" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_CommaSeparetedEmails" Type="InArgument(x:String)" />
    <x:Property Name="in_EmailSubject" Type="InArgument(x:String)" />
    <x:Property Name="in_Attachment" Type="InArgument(scg:IEnumerable(upr:IResource))" />
    <x:Property Name="in_Footer" Type="InArgument(x:String)" />
    <x:Property Name="in_Status" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentStateName" Type="InArgument(x:String)" />
    <x:Property Name="in_ErrorMessage" Type="InArgument(x:String)" />
    <x:Property Name="in_RemittaceFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_CountryName" Type="InArgument(x:String)" />
    <x:Property Name="in_TaskIds" Type="InArgument(x:String)" />
    <x:Property Name="in_BatchProcessing" Type="InArgument(x:String)" />
  </x:Members>
  <this:SendHtmlBasedEmail.in_HtmlEmailTitle>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_HtmlEmailTitle>
  <this:SendHtmlBasedEmail.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:SendHtmlBasedEmail.in_Config>
  <this:SendHtmlBasedEmail.in_CommaSeparetedEmails>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_CommaSeparetedEmails>
  <this:SendHtmlBasedEmail.in_EmailSubject>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_EmailSubject>
  <this:SendHtmlBasedEmail.in_Attachment>
    <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
  </this:SendHtmlBasedEmail.in_Attachment>
  <this:SendHtmlBasedEmail.in_Footer>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_Footer>
  <this:SendHtmlBasedEmail.in_Status>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_Status>
  <this:SendHtmlBasedEmail.in_CurrentStateName>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_CurrentStateName>
  <this:SendHtmlBasedEmail.in_ErrorMessage>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_ErrorMessage>
  <this:SendHtmlBasedEmail.in_RemittaceFileName>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_RemittaceFileName>
  <this:SendHtmlBasedEmail.in_CountryName>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_CountryName>
  <this:SendHtmlBasedEmail.in_TaskIds>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_TaskIds>
  <this:SendHtmlBasedEmail.in_BatchProcessing>
    <InArgument x:TypeArguments="x:String" />
  </this:SendHtmlBasedEmail.in_BatchProcessing>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SendHtmlBasedEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Platform</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SendHtmlBasedEmail" sap:VirtualizedContainerService.HintSize="1452.0000000000002,1460.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="579.2,1437.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="Generate an email with appropriate status like business exception, system exception and succes mail." DisplayName="Send HTML Email" sap:VirtualizedContainerService.HintSize="542.4,1183.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="HtmlBody" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="EmailGenerator - Invoke Workflow File (Framework\Utilities\EmailGenerator.xaml)" sap:VirtualizedContainerService.HintSize="508.8,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\Utilities\EmailGenerator.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Header">[in_HtmlEmailTitle]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Footer">[in_Footer]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Status">[in_Status]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="Out_Html_Template">[HtmlBody]</OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_CurrentStateName">[in_CurrentStateName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TemplateType" />
              <InArgument x:TypeArguments="x:String" x:Key="in_ErrorDetails">[in_ErrorMessage]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_RemittanceFileName">[in_RemittaceFileName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_CountryName">[in_CountryName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TaskIds">[in_TaskIds]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_BatchProcessing">[in_BatchProcessing]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="508.8,903.2" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[if(in_Config.ContainsKey(&quot;MaxRetryCount&quot;), CInt(in_Config(&quot;MaxRetryCount&quot;).ToString.Trim), 3)]" RetryInterval="[if(in_Config.ContainsKey(&quot;RetryInterval&quot;), TimeSpan.FromSeconds(CInt(in_Config(&quot;RetryInterval&quot;).ToString.Trim)), TimeSpan.FromSeconds(CInt(&quot;5&quot;)))]">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="467.2,704" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:List(x:String)" Name="ListOfEmails" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[ListOfEmails]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">[in_CommaSeparetedEmails.split(",").Select(Function(item) item.Trim).toList()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <umam:SendMailConnections ArgumentAttachmentPaths="{x:Null}" AttachmentList="{x:Null}" AttachmentPaths="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" Mailbox="{x:Null}" MailboxBackup="{x:Reference __ReferenceID0}" ReplyTo="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="Existing" Attachments="[in_Attachment]" AuthScopesInvalid="False" Body="[HtmlBody]" ConnectionId="a5cdf8c0-5721-4281-b6f3-5bc6914f2423" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="433.6,530.4" sap2010:WorkflowViewState.IdRef="SendMailConnections_1" Importance="Normal" InputType="HTML" SaveAsDraft="False" Subject="[in_EmailSubject]" To="[ListOfEmails]" UseConnectionService="True" UseSharedMailbox="False">
                    <umam:SendMailConnections.AttachmentsBackup>
                      <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="Existing">
                        <usau:BackupSlot.BackupValues>
                          <scg:Dictionary x:TypeArguments="umame:AttachmentInputMode, scg:List(x:Object)" />
                        </usau:BackupSlot.BackupValues>
                      </usau:BackupSlot>
                    </umam:SendMailConnections.AttachmentsBackup>
                    <umam:SendMailConnections.InputTypeBackup>
                      <usau:BackupSlot x:TypeArguments="umame:BodyInputType" StoredValue="HTML">
                        <usau:BackupSlot.BackupValues>
                          <scg:List x:TypeArguments="x:Object" x:Key="HTML" Capacity="1">
                            <InArgument x:TypeArguments="x:String">[HtmlBody]</InArgument>
                          </scg:List>
                          <scg:List x:TypeArguments="x:Object" x:Key="TEXT" Capacity="1">
                            <InArgument x:TypeArguments="x:String">[HtmlBody]</InArgument>
                          </scg:List>
                        </usau:BackupSlot.BackupValues>
                      </usau:BackupSlot>
                    </umam:SendMailConnections.InputTypeBackup>
                    <umam:SendMailConnections.MailboxArg>
                      <umamm:MailboxArgument SharedMailbox="{x:Null}" UseSharedMailbox="False">
                        <umamm:MailboxArgument.Backup>
                          <usau:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" x:Name="__ReferenceID0" StoredValue="NoMailbox">
                            <usau:BackupSlot.BackupValues>
                              <scg:Dictionary x:TypeArguments="umame:MailboxSelectionMode, scg:List(x:Object)" />
                            </usau:BackupSlot.BackupValues>
                          </usau:BackupSlot>
                        </umamm:MailboxArgument.Backup>
                      </umamm:MailboxArgument>
                    </umam:SendMailConnections.MailboxArg>
                  </umam:SendMailConnections>
                </Sequence>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
          </ui:RetryScope>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="545.6,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Email send exception : &quot; + exception.Message]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>